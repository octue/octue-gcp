# This workflow updates the pull request description with an auto-generated section containing the categorised commit
# message headers of the commits since the last pull request merged into main. The auto generated section is enveloped
# between two comments: "<!--- START AUTOGENERATED NOTES --->" and "<!--- END AUTOGENERATED NOTES --->". Anything
# outside these in the description is left untouched. Auto-generated updates can be skipped for a commit if
# "skipci" is in the commit message body.

name: update-pull-request

on:
  pull_request

jobs:
  description:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install release note compiler
      run: pip install git+https://github.com/octue/conventional-commits

    - name: Compile new pull request description
      # Note that the `secrets.GITHUB_TOKEN` environment variable is always available in GitHub actions - there's no
      # need to define or get your own.
      run: |
        echo 'PULL_REQUEST_NOTES<<EOF' >> $GITHUB_ENV
        echo "$(compile-release-notes PULL_REQUEST_START --pull-request-url=${{ github.event.pull_request.url }} --api-token=${{ secrets.GITHUB_TOKEN }})" >> $GITHUB_ENV
        echo EOF >> $GITHUB_ENV

    - name: Update pull request body
      uses: riskledger/update-pr-description@v2
      with:
        body: ${{ env.PULL_REQUEST_NOTES }}
        token: ${{ secrets.GITHUB_TOKEN }}
